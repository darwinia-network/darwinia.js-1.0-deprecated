{
    "UsableBalance": {
        "usableBalance": "Balance"
    },
    "Status": {
        "_enum": {
            "Free": null,
            "Reserved": null
        }
    },
    "MillauBalance": "u64",
    "MillauBlockHash": "H512",
    "MillauBlockNumber": "u64",
    "MillauHeader": {
        "parent_Hash": "MillauBlockHash",
        "number": "Compact<MillauBlockNumber>",
        "state_root": "MillauBlockHash",
        "extrinsics_root": "MillauBlockHash",
        "digest": "MillauDigest"
    },
    "MillauDigest": {
        "logs": "Vec<MillauDigestItem>"
    },
    "MillauDigestItem": {
        "_enum": {
            "Other": "Vec<u8>",
            "AuthoritiesChange": "Vec<AuthorityId>",
            "ChangesTrieRoot": "MillauBlockHash",
            "SealV0": "SealV0",
            "Consensus": "Consensus",
            "Seal": "Seal",
            "PreRuntime": "PreRuntime"
        }
    },
    "AccountSigner": "MultiSigner",
    "SpecVersion": "u32",
    "RelayerId": "AccountId",
    "SourceAccountId": "AccountId",
    "ImportedHeader": {
        "header": "BridgedHeader",
        "requires_justification": "bool",
        "is_finalized": "bool",
        "signal_hash": "Option<BridgedBlockHash>"
    },
    "AuthoritySet": {
        "authorities": "AuthorityList",
        "set_id": "SetId"
    },
    "Id": "[u8; 4]",
    "ChainId": "Id",
    "LaneId": "Id",
    "MessageNonce": "u64",
    "MessageId": "(Id, u64)",
    "MessageKey": {
        "lane_id": "LaneId",
        "nonce": "MessageNonce"
    },
    "InboundRelayer": "AccountId",
    "InboundLaneData": {
        "relayers": "Vec<(MessageNonce, MessageNonce, RelayerId)>",
        "last_confirmed_nonce": "MessageNonce"
    },
    "OutboundLaneData": {
        "latest_generated_nonce": "MessageNonce",
        "latest_received_nonce": "MessageNonce",
        "oldest_unpruned_nonce": "MessageNonce"
    },
    "MessageData": {
        "payload": "MessagePayload",
        "fee": "Fee"
    },
    "MessagePayload": "Vec<u8>",
    "BridgedOpaqueCall": "Vec<u8>",
    "OutboundMessageFee": "Fee",
    "OutboundPayload": {
        "spec_version": "SpecVersion",
        "weight": "Weight",
        "origin": "CallOrigin",
        "call": "BridgedOpaqueCall"
    },
    "CallOrigin": {
        "_enum": {
            "SourceRoot": "()",
            "TargetAccount": "(SourceAccountId, MultiSigner, MultiSignature)",
            "SourceAccount": "SourceAccountId"
        }
    },
    "MultiSigner": {
        "_enum": {
            "Ed25519": "H256",
            "Sr25519": "H256",
            "Ecdsa": "[u8;33]"
        }
    },
    "MessagesProofOf": {
        "bridged_header_hash": "BridgedBlockHash",
        "storage_proof": "Vec<StorageProofItem>",
        "lane": "LaneId",
        "nonces_start": "MessageNonce",
        "nonces_end": "MessageNonce"
    },
    "StorageProofItem": "Vec<u8>",
    "MessagesDeliveryProofOf": {
        "bridged_header_hash": "BridgedBlockHash",
        "storage_proof": "Vec<StorageProofItem>",
        "lane": "LaneId"
    },
    "UnrewardedRelayersState": {
        "unrewarded_relayer_entries": "MessageNonce",
        "messages_in_oldest_entry": "MessageNonce",
        "total_messages": "MessageNonce"
    },
    "AncestryProof": "()",
    "MessageFeeData": {
        "lane_id": "LaneId",
        "payload": "OutboundPayload"
    },
    "Precommit": {
        "target_hash": "BridgedBlockHash",
        "target_number": "BridgedBlockNumber"
    },
    "SignedPrecommit": {
        "precommit": "Precommit",
        "signature": "AuthoritySignature",
        "id": "AuthorityId"
    },
    "Commit": {
        "target_hash": "BridgedBlockHash",
        "target_number": "BridgedBlockNumber",
        "precommits": "Vec<SignedPrecommit>"
    },
    "GrandpaJustification": {
        "round": "u64",
        "commit": "Commit",
        "votes_ancestries": "Vec<BridgedHeader>"
    },
    "Fee": "MillauBalance",
    "BridgedBlockHash": "MillauBlockHash",
    "BridgedBlockNumber": "MillauBlockNumber",
    "BridgedHeader": "MillauHeader",
    "Parameter": {
        "_enum": {
            "MillauToRialtoConversionRate": "u128"
        }
    },
    "BSCHeader": {
        "parentHash": "H256",
        "uncleHash": "H256",
        "coinbase": "EthereumAddress",
        "stateRoot": "H256",
        "transactionsRoot": "H256",
        "receiptsRoot": "H256",
        "logBloom": "Bloom",
        "difficulty": "U256",
        "number": "u64",
        "gasLimit": "U256",
        "gasUsed": "U256",
        "timestamp": "u64",
        "extraData": "Bytes",
        "mixDigest": "H256",
        "nonce": "Bytes"
    },
    "Address": "AccountId",
    "LookupSource": "AccountId",
    "BalanceInfo": {},
    "BalanceLock": {
        "id": "LockIdentifier",
        "lockFor": "LockFor",
        "reasons": "Reasons"
    },
    "LockFor": {
        "_enum": {
            "Common": "Common",
            "Staking": "StakingLock"
        }
    },
    "Common": {
        "amount": "Balance"
    },
    "StakingLock": {
        "stakingAmount": "Balance",
        "unbondings": "Vec<Unbonding>"
    },
    "Reasons": {
        "_enum": [
            "Fee",
            "Misc",
            "All"
        ]
    },
    "Unbonding": {
        "amount": "Balance",
        "moment": "BlockNumber"
    },
    "AccountData": {
        "free": "Balance",
        "reserved": "Balance",
        "freeKton": "Balance",
        "reservedKton": "Balance"
    },
    "RingBalance": "Balance",
    "KtonBalance": "Balance",
    "TsInMs": "u64",
    "Power": "u32",
    "DepositId": "U256",
    "StakingBalanceT": {
        "_enum": {
            "RingBalance": "Balance",
            "KtonBalance": "Balance"
        }
    },
    "StakingLedgerT": {
        "stash": "AccountId",
        "activeRing": "Compact<Balance>",
        "activeDepositRing": "Compact<Balance>",
        "activeKton": "Compact<Balance>",
        "depositItems": "Vec<TimeDepositItem>",
        "ringStakingLock": "StakingLock",
        "ktonStakingLock": "StakingLock",
        "claimedRewards": "Vec<EraIndex>"
    },
    "TimeDepositItem": {
        "value": "Compact<Balance>",
        "startTime": "Compact<TsInMs>",
        "expireTime": "Compact<TsInMs>"
    },
    "ExposureT": {
        "ownRingBalance": "Compact<Balance>",
        "ownKtonBalance": "Compact<Balance>",
        "ownPower": "Power",
        "totalPower": "Power",
        "others": "Vec<IndividualExposure>"
    },
    "Exposure": "ExposureT",
    "IndividualExposure": {
        "who": "AccountId",
        "ringBalance": "Compact<Balance>",
        "ktonBalance": "Compact<Balance>",
        "power": "Power"
    },
    "ElectionResultT": {
        "electedStashes": "Vec<AccountId>",
        "exposures": "Vec<(AccountId, ExposureT)>",
        "compute": "ElectionCompute"
    },
    "RKT": {
        "r": "Balance",
        "k": "Balance"
    },
    "SpanRecord": {
        "slashed": "RKT",
        "paidOut": "RKT"
    },
    "UnappliedSlash": {
        "validator": "AccountId",
        "own": "RKT",
        "others": "Vec<(AccountId, RKT)>",
        "reporters": "Vec<AccountId>",
        "payout": "RKT"
    },
    "TreasuryProposal": {
        "proposer": "AccountId",
        "beneficiary": "AccountId",
        "ringValue": "Balance",
        "ktonValue": "Balance",
        "ringBond": "Balance",
        "ktonBond": "Balance"
    },
    "MappedRing": "u128",
    "EthereumTransactionIndex": "(H256, u64)",
    "EthereumBlockNumber": "u64",
    "EthereumHeader": {
        "parentHash": "H256",
        "timestamp": "u64",
        "number": "EthereumBlockNumber",
        "author": "EthereumAddress",
        "transactionsRoot": "H256",
        "unclesHash": "H256",
        "extraData": "Bytes",
        "stateRoot": "H256",
        "receiptsRoot": "H256",
        "logBloom": "Bloom",
        "gasUsed": "U256",
        "gasLimit": "U256",
        "difficulty": "U256",
        "seal": "Vec<Bytes>",
        "baseFeePerGas": "Option<U256>",
        "blockHash": "Option<H256>"
    },
    "EthereumAddress": "H160",
    "Bloom": "[u8; 256; Bloom]",
    "H128": "[u8; 16; H128]",
    "EthashProof": {
        "dagNodes": "(H512, H512)",
        "proof": "Vec<H128>"
    },
    "EthereumReceipt": {
        "gasUsed": "U256",
        "logBloom": "Bloom",
        "logs": "Vec<LogEntry>",
        "outcome": "TransactionOutcome"
    },
    "LogEntry": {},
    "TransactionOutcome": {},
    "EthereumNetwork": {
        "_enum": {
            "Mainnet": null,
            "Ropsten": null
        }
    },
    "RedeemFor": {
        "_enum": {
            "Token": null,
            "Deposit": null
        }
    },
    "EthereumReceiptProof": {
        "index": "u64",
        "proof": "Bytes",
        "headerHash": "H256"
    },
    "EthereumReceiptProofThing": "(EthereumHeader, EthereumReceiptProof, MMRProof)",
    "MMRProof": {
        "memberLeafIndex": "u64",
        "lastLeafIndex": "u64",
        "proof": "Vec<H256>"
    },
    "EthereumRelayHeaderParcel": {
        "header": "EthereumHeader",
        "parentMmrRoot": "H256"
    },
    "EthereumRelayProofs": {
        "ethashProof": "Vec<EthashProof>",
        "mmrProof": "Vec<H256>"
    },
    "OtherSignature": {
        "_enum": {
            "Eth": "EcdsaSignature",
            "Tron": "EcdsaSignature"
        }
    },
    "EcdsaSignature": "[u8; 65; EcdsaSignature]",
    "TronAddress": "EthereumAddress",
    "OtherAddress": {
        "_enum": {
            "Eth": "EthereumAddress",
            "Tron": "TronAddress"
        }
    },
    "AddressT": "[u8; 20; AddressT]",
    "MerkleMountainRangeRootLog": {
        "prefix": "[u8; 4; Prefix]",
        "ParentMmrRoot": "Hash"
    },
    "ChainProperties": {
        "ss58Format": "Option<u8>",
        "tokenDecimals": "Option<Vec<u32>>",
        "tokenSymbol": "Option<Vec<Text>>"
    },
    "AccountInfo": {
        "nonce": "Index",
        "refcount": "RefCount",
        "data": "AccountData"
    },
    "Signer": "EthereumAddress",
    "RelayAuthorityT": {
        "accountId": "AccountId",
        "signer": "EthereumAddress",
        "stake": "Balance",
        "term": "BlockNumber"
    },
    "MMRRoot": "Hash",
    "EcdsaAddress": "EthereumAddress",
    "EcdsaMessage": "H256",
    "RelayAuthoritySigner": "EcdsaAddress",
    "RelayAuthorityMessage": "EcdsaMessage",
    "RelayAuthoritySignature": "EcdsaSignature",
    "Term": "BlockNumber",
    "OpCode": "[u8; 4; OpCode]",
    "ScheduledAuthoritiesChangeT": {
        "nextAuthorities": "Vec<RelayAuthorityT>",
        "deadline": "BlockNumber"
    },
    "MmrRootToSign": {
        "mmrRoot": "Hash",
        "signatures": "Vec<(EthereumAddress, EcdsaSignature)>"
    },
    "ElectionCompute": {
        "_enum": [
            "OnChain",
            "Signed",
            "Authority"
        ]
    },
    "PalletId": "LockIdentifier",
    "MMRProofResult": {
        "mmrSize": "u64",
        "proof": "Text"
    },
    "BlockNumberFor": "BlockNumber",
    "NodeIndex": "u64",
    "MmrNodesPruningConfiguration": {
        "step": "NodeIndex",
        "progress": "NodeIndex",
        "lastPosition": "NodeIndex"
    },
    "ProxyDefinition": {
        "delegate": "AccountId",
        "proxyType": "ProxyType",
        "delay": "BlockNumber"
    },
    "ProxyType": {
        "_enum": {
            "Any": null,
            "NonTransfer": null,
            "Governance": null,
            "Staking": null,
            "IdentityJudgement": null,
            "EthereumBridge": null
        }
    },
    "ProxyAnnouncement": {
        "real": "AccountId",
        "callHash": "Hash",
        "height": "BlockNumber"
    },
    "Announcement": "ProxyAnnouncement",
    "RelayHeaderId": "EthereumBlockNumber",
    "RelayHeaderParcel": "EthereumRelayHeaderParcel",
    "RelayProofs": "EthereumRelayProofs",
    "RelayAffirmationId": {
        "relayHeaderId": "EthereumBlockNumber",
        "round": "u32",
        "index": "u32"
    },
    "RelayAffirmationT": {
        "relayer": "AccountId",
        "relayHeaderParcels": "EthereumRelayHeaderParcel",
        "bond": "Balance",
        "maybeExtendedRelayAffirmationId": "Option<RelayAffirmationId>",
        "verified": "bool"
    },
    "RelayVotingState": {
        "ayes": "Vec<AccountId>",
        "nays": "Vec<AccountId>"
    },
    "PowerOf": {
        "power": "Power"
    }
}